---
/**
 * Fieldset Component
 *
 * @description A fieldset wrapper for grouping form controls with validation support
 */

interface Props {
  /**
   * Name attribute for the fieldset (used for group validation)
   */
  name: string
  /**
   * Unique identifier for the fieldset
   */
  id?: string
  /**
   * Legend text for the fieldset
   */
  legend: string
  /**
   * Whether the fieldset group is required (at least one selection)
   */
  required?: boolean
  /**
   * Error message to display when group validation fails
   */
  'data-validation'?: string
  /**
   * Additional classes to apply to the fieldset
   */
  class?: string
  /**
   * Variant of the fieldset
   */
  variant?: 'default' | 'minimal'
  /**
   * HTML attributes
   */
  [key: string]: any
}

const {
  name,
  id,
  legend,
  required = false,
  'data-validation': dataValidation,
  class: className,
  variant = 'default',
  ...rest
} = Astro.props

const fieldsetId = id || `fieldset-${name}`

// Generate default validation message for groups
const getDefaultValidationMessage = (isRequired: boolean): string => {
  return isRequired ? 'Please select at least one option' : ''
}

// Use provided validation message or default
const validationMessage = dataValidation || getDefaultValidationMessage(required)
---

<fieldset
  class:list={['fieldset', className, variant]}
  id={fieldsetId}
  name={name}
  data-validation={validationMessage}
  data-required={required}
  aria-describedby={required ? `${fieldsetId}-validation` : undefined}
  {...rest}
>
  <legend>
    {legend}
    {required && <span>(required)</span>}
  </legend>
  <div class="fieldset-group">
    <slot />
  </div>

  {
    required && (
      <small id={`${fieldsetId}-validation`}>
        <span class="icon">
          <svg width="1em" height="1em" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
            <g
              fill="none"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
            >
              <circle cx="12" cy="12" r="10" />
              <path d="m15 9l-6 6m0-6l6 6" />
            </g>
          </svg>
        </span>
        <span class="message" />
      </small>
    )
  }
</fieldset>

<style>
  :where(.fieldset) {
    --text-color: var(--color-default-text);

    display: grid;
    gap: var(--space-4xs);
    border: 2px solid var(--color-default-border);
    border-radius: var(--radius-s);
    padding: var(--space-xs);
  }

  :where(.fieldset.minimal) {
    border: none;
    padding: 0;
  }

  :where(.fieldset legend) {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--space-3xs);
    margin-block-end: 0;
    padding-inline: var(--space-2xs);
  }

  :where(.fieldset.minimal legend) {
    padding-inline: 0;
  }

  :where(.fieldset-group) {
    display: flex;
    flex-direction: column;
    gap: var(--space-4xs);
  }

  :where(.fieldset small) {
    display: none;
    align-items: center;
    gap: var(--space-4xs);
    margin-block-start: var(--space-2xs);
    color: var(--text-color);
  }

  :where(.fieldset[aria-invalid='true']) {
    --text-color: light-dark(hsl(355, 78%, 39%), hsl(339, 88%, 69%));

    border-color: var(--color-error-border);
  }

  :where(.fieldset[aria-invalid='true']) legend {
    color: var(--text-color);
  }

  :where(.fieldset[aria-invalid='true']) small {
    display: flex;
  }
</style>
